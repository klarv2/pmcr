{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","actions/itemActions.js","components/ItemModal.js","components/CarouselSlider.js","components/CardSummary.js","components/Home.js","actions/imageActions.js","components/FooterCont.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/imageReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","authLinks","NavItem","guestLinks","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemsLoading","ItemModal","saveby","newItem","addItem","marginBottom","item","items","src","altText","title","caption","CarouselSlider","activeIndex","next","bind","previous","goToIndex","onExiting","onExited","animating","nextIndex","length","newIndex","slides","map","CarouselItem","key","alt","CarouselCaption","captionText","captionHeader","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","CardSummary","image","Card","CardImg","top","width","CardBody","CardTitle","CardSubtitle","CardText","description","Home","onDeleteClick","deleteItem","getImages","getItems","images","isLoading","Spinner","ListGroup","TransitionGroup","_id","CSSTransition","timeout","classNames","ListGroupItem","size","Row","imgType","Col","sm","get","delete","FooterCont","class","initialState","loading","localStorage","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cbe24f1.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status, id }\r\n  };\r\n};\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  };\r\n};","  \r\nexport const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const GET_IMAGES = \"GET_IMAGES\";","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\n\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL\r\n} from './types';\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // User loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get('/api/auth/user', tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  axios\r\n    .post('/api/users', body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n// Login User\r\nexport const login = ({ email, password }) => dispatch => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post('/api/auth', body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n  // Get token from localstorage\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    }\r\n  };\r\n\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers['x-auth-token'] = token;\r\n  }\r\n\r\n  return config;\r\n};","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, password } = this.state;\r\n\r\n    // Create user object\r\n    const newUser = {\r\n      name,\r\n      email,\r\n      password\r\n    };\r\n\r\n    // Attempt to register\r\n    this.props.register(newUser);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Register\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='name'>Name</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='name'\r\n                  placeholder='Name'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='email'>Email</Label>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Register\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { register, clearErrors }\r\n)(RegisterModal);","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    email: '',\r\n    password: '',\r\n    msg: null\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated } = this.props;\r\n    if (error !== prevProps.error) {\r\n      // Check for register error\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n    // If authenticated, close modal\r\n    if (this.state.modal) {\r\n      if (isAuthenticated) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.props.clearErrors();\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const user = {\r\n      email,\r\n      password\r\n    };\r\n\r\n    // Attempt to login\r\n    this.props.login(user);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink onClick={this.toggle} href='#'>\r\n          Login\r\n        </NavLink>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n          <ModalBody>\r\n            {this.state.msg ? (\r\n              <Alert color='danger'>{this.state.msg}</Alert>\r\n            ) : null}\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='email'>Email</Label>\r\n                <Input\r\n                  type='email'\r\n                  name='email'\r\n                  id='email'\r\n                  placeholder='Email'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n\r\n                <Label for='password'>Password</Label>\r\n                <Input\r\n                  type='password'\r\n                  name='password'\r\n                  id='password'\r\n                  placeholder='Password'\r\n                  className='mb-3'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Login\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login, clearErrors }\r\n)(LoginModal);","import React, { Component, Fragment } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Logout extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <NavLink onClick={this.props.logout} href='#'>\r\n          Logout\r\n        </NavLink>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { logout }\r\n)(Logout);","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Container\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport RegisterModal from './auth/RegisterModal';\r\nimport LoginModal from './auth/LoginModal';\r\nimport Logout from './auth/Logout';\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  static propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <span className='navbar-text mr-3'>\r\n            <strong>{user ? `Welcome ${user.name}` : ''}</strong>\r\n          </span>\r\n        </NavItem>\r\n        <NavItem>\r\n          <Logout />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <Fragment>\r\n        <NavItem>\r\n          <RegisterModal />\r\n        </NavItem>\r\n        <NavItem>\r\n          <LoginModal />\r\n        </NavItem>\r\n      </Fragment>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color='dark' dark expand='sm' className='mb-2'>\r\n          <Container>\r\n            <NavbarBrand href='/'>PropertyManageCR.com</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className='ml-auto' navbar>\r\n                {isAuthenticated ? authLinks : guestLinks}\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AppNavbar);","import axios from 'axios';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\r\nimport { tokenConfig } from './authActions';\r\nimport { returnErrors } from './errorActions';\r\n\r\nexport const getItems = () => dispatch => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .get('/api/items')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const addItem = item => (dispatch, getState) => {\r\n  axios\r\n    .post('/api/items', item, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: ADD_ITEM,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deleteItem = id => (dispatch, getState) => {\r\n  axios\r\n    .delete(`/api/items/${id}`, tokenConfig(getState))\r\n    .then(res =>\r\n      dispatch({\r\n        type: DELETE_ITEM,\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const setItemsLoading = () => {\r\n  return {\r\n    type: ITEMS_LOADING\r\n  };\r\n};","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ItemModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: '',\r\n    saveby:''\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      name: this.state.name,\r\n      saveby: this.props.auth.user.email\r\n    };\r\n\r\n   // console.log(newItem)\r\n\r\n    // Add item via addItem action\r\n    this.props.addItem(newItem);\r\n\r\n    // Close modal\r\n    this.toggle();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.isAuthenticated ? (\r\n          <Button\r\n            color='dark'\r\n            style={{ marginBottom: '2rem' }}\r\n            onClick={this.toggle}\r\n          >\r\n            Add Item\r\n          </Button>\r\n        ) : (\r\n          <h4 className='mb-3 ml-4'>Please log in to manage items</h4>\r\n        )}\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for='item'>Item</Label>\r\n                <Input\r\n                  type='text'\r\n                  name='name'\r\n                  id='item'\r\n                  placeholder='Add shopping item'\r\n                  onChange={this.onChange}\r\n                />\r\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\r\n                  Add Item\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return{\r\n    item: state.item,\r\n    auth: state.auth,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addItem }\r\n)(ItemModal);","import React, { Component } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\n\r\nconst items = [\r\n  {\r\n    src: 'http://propertymanagecr.com/images/propiedades-slider1.jpg',\r\n    altText: 'Genere ingresos',\r\n    title: 'Dejenos preocuparnos de todo por usted',\r\n    caption: 'genere ingresos sin mover un dedo'\r\n  },\r\n  {\r\n    src: 'http://propertymanagecr.com/images/propiedades-slider2.jpg',\r\n    altText: 'Vayase de vacaciones y reciba dinero',\r\n    title:'Va a salir de viaje?',\r\n    caption: 'alquile su hogar y genere ingresos mientras no esta'\r\n  },\r\n  {\r\n    src: 'http://propertymanagecr.com/images/propiedades-slider3.jpg',\r\n    altText: 'Diseñamos su espacio',\r\n    title:'Le ayudamos en el diseno de su casa o apartamento',\r\n    caption: 'le ayudamos hacerlo mas atractivo para atraer mas clientes'\r\n  }\r\n];\r\n\r\nclass CarouselSlider extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeIndex: 0 };\r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.goToIndex = this.goToIndex.bind(this);\r\n    this.onExiting = this.onExiting.bind(this);\r\n    this.onExited = this.onExited.bind(this);\r\n  }\r\n\r\n  onExiting() {\r\n    this.animating = true;\r\n  }\r\n\r\n  onExited() {\r\n    this.animating = false;\r\n  }\r\n\r\n  next() {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  previous() {\r\n    if (this.animating) return;\r\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\r\n    this.setState({ activeIndex: nextIndex });\r\n  }\r\n\r\n  goToIndex(newIndex) {\r\n    if (this.animating) return;\r\n    this.setState({ activeIndex: newIndex });\r\n  }\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n\r\n    const slides = items.map((item) => {\r\n      return (\r\n        <CarouselItem\r\n          onExiting={this.onExiting}\r\n          onExited={this.onExited}\r\n          key={item.src}\r\n        >\r\n          <img src={item.src} alt={item.altText} />\r\n          <CarouselCaption captionText={item.caption} captionHeader={item.title} />\r\n        </CarouselItem>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Carousel\r\n        activeIndex={activeIndex}\r\n        next={this.next}\r\n        previous={this.previous}\r\n      >\r\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\r\n        {slides}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CarouselSlider;","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button\r\n} from 'reactstrap';\r\n\r\nconst CardSummary = (image) => {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardImg top width=\"100%\" src={image.image.src} alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle>{image.image.title}</CardTitle>\r\n          <CardSubtitle></CardSubtitle>\r\n          <CardText>{image.image.description}</CardText>\r\n          <Button>Button</Button>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSummary;","import React, { Component, Fragment } from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button, Spinner, Row, Col } from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { getItems, deleteItem } from '../actions/itemActions';\r\nimport ItemModal from './ItemModal';\r\n\r\nimport CarouselSlider from './CarouselSlider';\r\nimport CardSummary from './CardSummary'\r\n\r\nimport { getImages } from '../actions/imageActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Home extends Component {\r\n  static propTypes = {\r\n    getImages: PropTypes.func.isRequired,\r\n    image: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n    isLoading: PropTypes.bool,\r\n    getItems: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getImages();\r\n    this.props.getItems();\r\n  }\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteItem(id);\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props.image;\r\n    const { items } = this.props.item;\r\n     return (\r\n       <div>\r\n      {this.props.isAuthenticated ? \r\n       (\r\n        <Container>\r\n        <ItemModal/>\r\n          {this.props.isLoading ?  <Spinner color=\"info\" /> : null}\r\n        <ListGroup>\r\n          <TransitionGroup className='shopping-list'>\r\n            {items.map(({ _id, name, saveby }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames='fade'>\r\n                <ListGroupItem>\r\n                  {this.props.isAuthenticated ? (\r\n                    <Button className='remove-btn' color='danger' size='sm' onClick={this.onDeleteClick.bind(this, _id)}>\r\n                      &times;\r\n                    </Button>\r\n                  ) : null}\r\n                  {name}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n      ) : (\r\n      <Container>\r\n        {this.props.isLoading ?  <Spinner color=\"info\" /> : null}\r\n        <Row>\r\n          <CarouselSlider />\r\n        </Row>\r\n        <Row className='mt-2'>\r\n          {images.map(image => (\r\n            <Fragment>\r\n              {image.imgType === 'CardHome' ? \r\n                <Col sm=\"4\"><CardSummary image={image} /></Col>\r\n                : null\r\n              }\r\n            </Fragment>   \r\n          ))}\r\n        </Row>   \r\n      </Container>\r\n      )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  image: state.image,\r\n  item: state.item,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isLoading: state.auth.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getImages, getItems, deleteItem })(Home);\r\n","import axios from 'axios';\r\nimport { GET_IMAGES} from './types';\r\nimport { returnErrors } from './errorActions';\r\n\r\nexport const getImages = () => dispatch => {\r\n\r\n  axios\r\n    .get('/api/images')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_IMAGES,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass FooterCont extends Component {\r\n    render(){\r\n      return (\r\n        <footer id=\"footer\" className='nav-footer mt-2'>\r\n          <section class=\"sitemap\">\r\n            <div>\r\n              <h5>Contactenos</h5>\r\n              <p>Telefonos: 7034-1733 / </p>\r\n              <p>Email: info@propertymanagecr.com</p>\r\n              <p>Property Manage CR</p>\r\n            </div>\r\n            <div> \r\n            </div>\r\n          </section>\r\n          <section class=\"copyright\">Copyright © 2019 Klarv.</section>\r\n        </footer>\r\n      );\r\n    }\r\n    \r\n  };\r\n  \r\n  export default FooterCont;","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                loading: false\r\n            }\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: state.items.filter( item => item._id !== action.payload)\r\n            }\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [action.payload, ...state.items]\r\n            }\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n  id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch(action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        msg: {},\r\n        status: null,\r\n        id: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        };\r\n      case USER_LOADED:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          isLoading: false,\r\n          user: action.payload\r\n        };\r\n      case LOGIN_SUCCESS:\r\n      case REGISTER_SUCCESS:\r\n        localStorage.setItem('token', action.payload.token);\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          isAuthenticated: true,\r\n          isLoading: false\r\n        };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT_SUCCESS:\r\n      case REGISTER_FAIL:\r\n        localStorage.removeItem('token');\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          user: null,\r\n          isAuthenticated: false,\r\n          isLoading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_IMAGES } from '../actions/types'\r\n\r\nconst initialState = {\r\n    images: [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_IMAGES:\r\n            return {\r\n                ...state,\r\n                images: action.payload,\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport itemReducer from './itemReducer'\r\nimport errorReducer from './errorReducer'\r\nimport authReducer from './authReducer'\r\nimport imageReducer from './imageReducer'\r\n\r\nexport default combineReducers({\r\n    item: itemReducer,\r\n    error: errorReducer,\r\n    auth: authReducer,\r\n    image: imageReducer\r\n})","import { createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n ))\r\n\r\nexport default store;\r\n","\nimport React, { Component } from 'react';\nimport AppNavbar from './components/AppNavbar';\nimport Home from './components/Home';\nimport FooterCont from './components/FooterCont';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport {loadUser} from './actions/authActions'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount(){\n    store.dispatch(loadUser());\n  }\n  render(){\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar/>\n          <Home/>\n          <FooterCont/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}